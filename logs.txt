current agenda items:
- more rigorous input for p0 amplitude coefficient
- rework "results and verifications" with info about what parts of my sims will be used for future Webb group experiments
- make main time loop inside membrane-response a function
- displacement vs time plots still take way too long to run, legends are gross (same with the cutout lines)
- make script, flash cards? for poster talk
- have option to save to svg or pdf if parameters latex = true or ppt = true
- send webb 100 modes side by side for impulse times as shown in slides
- send webb 100 modes side by side for impulse times at 0, more spread out impulse times
- clean up comments throughout code so it just reads better!

things that have been done:
- for code: to implement damping condition, resonant freq, pulse the same spot diff modes diff resonant frequencies
- velocity plots are fine now
- make slides for tomorrow
- compute Q for each resonance
- bugs that still exist: 
    - running the displacement plots for adam's animation file vs main.py in the model directory produces diff responses, \
    trying to figure out why that is
    - figured it out! i was still doing multiple impulse times so the first impulse didn't look as "bright" because subsequent \
    pulses would kick up the displacement higher, vs the most displaced it gets is at the beginning w only one impulse
- refactor code into multiple modules
- checked that the inner/outer loop switch still superimposes correctly
- final abstract submitted!!! hoorayyyy
- individual modes plots look ok
- thoughts: should i be looping thru modes first, or thru time first? // both are fine
- updated github readme
- implemented proper velocity jump condition checking (hopefully it is accurate)
- motivation section for final report draft
- plotting just phi_1_1
- have plots of membrane displacement along a cutout
- have plots of average displacement over time
- plots are now saved to image png files
 (these files will be created upon running the script)
 - clarify question, repeated here (also commented on line 44 of model.py): 
    - for defining h for a membrane_response object (a membrane): 
    ... something that is still confusing to me is that we are treating this and plotting it like a 2D membrane, 
    ... but we also give it a height so as to define tension as such?
    -> this is because h will be on a small enough scale as compared to membrane length and width that it is feasible
       to make this approximation



